// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.2.1.6 by WSRD Tencent.
// Generated from `/data/jcetool/taf//upload/kesenhu/AppPituWnsInterface.jce'
// **********************************************************************

package PituClientInterface;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONException;
import com.alibaba.fastjson.annotation.JSONField;

// 请注意这个类不能随意使用在线最新的替换，和后台校验的时候只会用到下面的部分字段(id,name,iconUrl,miniSptVersion,priority,version,materialIds,subCategories)
public final class stCategory extends com.qq.taf.jce.JceStruct
{
    @JSONField(ordinal = 1) // 请注意这里的注解不能拿掉，为了和后台校验的需要
    public String id = "";

    @JSONField(ordinal = 2)
    public String name = "";

    @JSONField(ordinal = 3)
    public String iconUrl = "";

    @JSONField(ordinal = 4)
    public int miniSptVersion = 99999999;

    @JSONField(ordinal = 5)
    public int priority = 1;

    @JSONField(ordinal = 7)
    public java.util.ArrayList<String> materialIds = null;

    @JSONField(ordinal = 8)
    public java.util.ArrayList<stCategory> subCategories = null;

    @JSONField(ordinal = 9)
    public int version = 0;

    @JSONField(ordinal = 10)
    public String selectedIconUrl = "";

    public stCategory()
    {
    }

    public stCategory(String id, String name, String iconUrl, int miniSptVersion, int priority, java.util.ArrayList<String> materialIds, java.util.ArrayList<stCategory> subCategories, int version, String selectedIconUrl)
    {
        this.id = id;
        this.name = name;
        this.iconUrl = iconUrl;
        this.miniSptVersion = miniSptVersion;
        this.priority = priority;
        this.materialIds = materialIds;
        this.subCategories = subCategories;
        this.version = version;
        this.selectedIconUrl = selectedIconUrl;
    }

    public stCategory(String id, String name, String iconUrl, int miniSptVersion, int priority, java.util.ArrayList<String> materialIds, java.util.ArrayList<stCategory> subCategories, int version)
    {
        this.id = id;
        this.name = name;
        this.iconUrl = iconUrl;
        this.miniSptVersion = miniSptVersion;
        this.priority = priority;
        this.materialIds = materialIds;
        this.subCategories = subCategories;
        this.version = version;
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream _os)
    {
        _os.write(id, 0);
        _os.write(name, 1);
        _os.write(iconUrl, 2);
        _os.write(miniSptVersion, 3);
        _os.write(priority, 4);
        if (null != materialIds)
        {
            _os.write(materialIds, 5);
        }
        if (null != subCategories)
        {
            _os.write(subCategories, 6);
        }
        _os.write(version, 7);
        if (null != selectedIconUrl)
        {
            _os.write(selectedIconUrl, 8);
        }
    }

    static java.util.ArrayList<String> cache_materialIds;
    static {
        cache_materialIds = new java.util.ArrayList<String>();
        String __var_2 = "";
        ((java.util.ArrayList<String>)cache_materialIds).add(__var_2);
    }
    static java.util.ArrayList<stCategory> cache_subCategories;
    static {
        cache_subCategories = new java.util.ArrayList<stCategory>();
        stCategory __var_3 = new stCategory();
        ((java.util.ArrayList<stCategory>)cache_subCategories).add(__var_3);
    }

    public void readFrom(com.qq.taf.jce.JceInputStream _is)
    {
        this.id =  _is.readString(0, true);
        this.name =  _is.readString(1, true);
        this.iconUrl =  _is.readString(2, true);
        this.miniSptVersion = (int) _is.read(miniSptVersion, 3, true);
        this.priority = (int) _is.read(priority, 4, true);
        this.materialIds = (java.util.ArrayList<String>) _is.read(cache_materialIds, 5, false);
        this.subCategories = (java.util.ArrayList<stCategory>) _is.read(cache_subCategories, 6, false);
        this.version = (int) _is.read(version, 7, false);
        this.selectedIconUrl =  _is.readString(8, false);
    }

    public String writeToJsonString() throws JSONException
    {
        return JSON.toJSONString(this);
    }

    public String format2Json4Sha1() throws JSONException {
//        JSONObject jsonObject = new JSONObject(true);
//        jsonObject.put("id", id);
//        jsonObject.put("name", name);
//        jsonObject.put("iconUrl", iconUrl);
//        jsonObject.put("miniSptVersion", miniSptVersion);
//        jsonObject.put("priority", priority);
//        jsonObject.put("version", version);
//        jsonObject.put("materialIds", materialIds);
//        jsonObject.put("subCategories", subCategories);
//        return jsonObject.toJSONString();
        return JSON.toJSONString(this);
    }

//    public String format2Json4Sha1() throws org.json.JSONException {
//        JSONObject jsonObject = new JSONObject(true);
//        jsonObject.put("id", "" + id);
//        jsonObject.put("materialIds", "" + materialIds);
//        JSONArray subCategoriesArray = new JSONArray();
//        if (subCategories != null && !subCategories.isEmpty()) {
//            for (stCategory subCategory : subCategories) {
//                subCategoriesArray.put(subCategory.format2Json4Sha1());
//            }
//        }
//        jsonObject.put("subCategories", subCategoriesArray);
//        return jsonObject.toString();
//    }

    public void readFromJsonString(String text) throws JSONException
    {
        stCategory temp = JSON.parseObject(text, stCategory.class);
        this.id = temp.id;
        this.name = temp.name;
        this.iconUrl = temp.iconUrl;
        this.selectedIconUrl = temp.selectedIconUrl;
        this.miniSptVersion = temp.miniSptVersion;
        this.priority = temp.priority;
        this.materialIds = temp.materialIds;
        this.subCategories = temp.subCategories;
        this.version = temp.version;
    }
}

